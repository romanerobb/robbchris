{"version":3,"sources":["logo.svg","components/login/login.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","theme","createTheme","Login","navigate","useNavigate","usernameInput","useRef","userpasswordInput","async","login","userprofile","username","current","value","userpassword","response","axios","post","concat","console","log","data","error","alert","React","ThemeProvider","Grid","container","component","sx","height","CssBaseline","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","src","alt","width","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","color","Button","onClick","mb","Footer","App","createElement","Fragment","BrowserRouter","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.60c7e40f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Footer from '../footer/footer';\r\n\r\nconst theme = createTheme();\r\n\r\nfunction Login() {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const url = \"https://rorobb.com\"\r\n\r\n  const usernameInput = useRef();\r\n  const userpasswordInput = useRef();\r\n\r\n  async function login(){\r\n\r\n    const userprofile = {\r\n        \r\n        username: usernameInput.current.value,\r\n        userpassword: userpasswordInput.current.value,\r\n    }\r\n    \r\n    try{\r\n        const response = await axios.post(`${url}/auth`, userprofile)\r\n        console.log(response.data)\r\n        navigate(\"/dashboard\");\r\n    } catch (error) {\r\n        console.error(error.response.data)\r\n        console.log(error)\r\n        alert(error.response.data);\r\n    }\r\n}\r\n\r\n  return (\r\n    <>\r\n    <ThemeProvider theme={theme}>\r\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n        <CssBaseline />\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={4}\r\n          md={7}\r\n          sx={{\r\n            backgroundImage: 'url(https://source.unsplash.com/random/?city,night)',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor: (t) =>\r\n            t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n          }}\r\n        />\r\n\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <Box\r\n            sx={{\r\n              my: 8,\r\n              mx: 4,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <img src=\"https://i.ibb.co/nCcW6P1/JMR-70.jpg\" alt=\"JMRodgers Logo\" width=\"400\" height=\"auto\"></img>\r\n            <Avatar sx={{ m: 1, bgcolor: 'success.main' }}>\r\n            <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h9\">\r\n              Sign in and start tracking\r\n            </Typography>\r\n\r\n            <Box component=\"form\" onSubmit={login} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"success\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"success\" \r\n              onClick={login}\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            </Box>\r\n            <Footer />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Login from './components/login/login';\n\nfunction App() {\n  return (\n<>\n<BrowserRouter>\n                    <Routes>\n                        <Route exact path=\"https://romanerobb.github.io/robbchris\" element={<Login />} />\n                    </Routes>\n            </BrowserRouter>\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}